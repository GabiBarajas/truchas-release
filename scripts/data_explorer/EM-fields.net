//
// time: Mon Nov 28 16:58:46 2005
//
// version: 3.2.0 (format), 4.3.2 (DX)
//
//
//
include "PositionMinMaxMacro.net"
//
// MODULE main
// page assignment: Boundary	order=6, windowed=0, showing=0
// page assignment: Colormaps	order=7, windowed=0, showing=0
// page assignment: Cut Planes	order=4, windowed=0, showing=0
// page assignment: Data Limits	order=3, windowed=0, showing=0
// page assignment: EM Field	order=5, windowed=0, showing=0
// page assignment: Image	order=8, windowed=0, showing=0
// page assignment: Import	order=2, windowed=0, showing=1
// workspace: width = 549, height = 589
// layout: snap = 1, width = 36, height = 36, align = CC
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 154, y = 23, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "./sample-EM-Bfield-1.4.dx"
    // output[2]: visible = 0, type = 32, value = "sample-EM-Bfield-1.4.dx"
    // page group: Import
    //
    // 
    // node Sequencer[2]: x = 266, y = 23, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_2"
    // input[4]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 19
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 19 1 0 19 1 }
    // page group: Import
    // vcr[2]: min = 0, max = 19, beg = 0, end = 19, cur = 1, inc = 1, loop = off, step = on, pal = off
    // window: position = (0.4250,0.5267), size = 0.1458x0.0667
    //
    main_Sequencer_2_out_1 = @frame;
    // 
    // node Import[1]: x = 198, y = 95, inputs = 6, label = Import
    // input[2]: defaulting = 1, visible = 0, type = 16777248, value = { "Ex" "Ey" "Ez" "Bx" "By" "Bz" }
    // input[3]: visible = 0
    // input[4]: visible = 1
    // input[5]: visible = 1
    // page group: Import
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Sequencer_2_out_1,
    main_Sequencer_2_out_1,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Attribute[1]: x = 417, y = 167, inputs = 2, label = Attribute
    // input[2]: visible = 0
    // page group: Import
    //
main_Attribute_1_out_1 = 
    Attribute(
    main_Import_1_out_1,
    main_Attribute_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Inquire[5]: x = 279, y = 167, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "series positions"
    // input[3]: visible = 0
    // page group: Import
    //
main_Inquire_5_out_1 = 
    Inquire(
    main_Import_1_out_1,
    main_Inquire_5_in_2,
    main_Inquire_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Select[15]: x = 282, y = 239, inputs = 3, label = Select
    // input[2]: visible = 0
    // page group: Import
    //
main_Select_15_out_1 = 
    Select(
    main_Inquire_5_out_1,
    main_Select_15_in_2,
    main_Select_15_in_3
    ) [instance: 15, cache: 1];
    // 
    // node Transmitter[5]: x = 290, y = 311, inputs = 1, label = time
    // page group: Import
    //
time = main_Select_15_out_1;
    // 
    // node Receiver[73]: x = 614, y = 23, inputs = 1, label = time
    // page group: Image
    //
main_Receiver_73_out_1[cache: 0] = time;
    // 
    // node Compute[28]: x = 596, y = 95, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "mod($0,1)"
    // input[3]: visible = 0
    // page group: Image
    // expression: value = mod(a,1)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_28_out_1 = 
    Compute(
    main_Compute_28_in_1,
    main_Receiver_73_out_1,
    main_Compute_28_in_3
    ) [instance: 28, cache: 1];
    // 
    // node Format[1]: x = 603, y = 167, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "t = %.2f"
    // input[3]: visible = 0
    // page group: Image
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Compute_28_out_1,
    main_Format_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Caption[1]: x = 600, y = 239, inputs = 9, label = Caption
    // input[2]: visible = 0
    // page group: Image
    //
main_Caption_1_out_1 = 
    Caption(
    main_Format_1_out_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[3]: x = 28, y = 95, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: Image
    // toggle : 1
    //
    // 
    // node Selector[4]: x = 238, y = 23, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_4"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "Boundary" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 0, visible = 0, type = 16777248, value = {"Cut Planes" "Boundary" }
    // input[5]: defaulting = 0, visible = 0, type = 16777245, value = {1  2  }
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 0, type = 32, value = "Boundary" 
    // page group: Image
    //
main_Selector_4_out_1[cache: 2],
main_Selector_4_out_2[cache: 2] = 
    Selector(
    main_Selector_4_in_1,
    main_Selector_4_in_2,
    main_Selector_4_in_3,
    main_Selector_4_in_4,
    main_Selector_4_in_5,
    main_Selector_4_in_6,
    main_Selector_4_in_7
    ) [instance: 4, cache: 1];
    // 
    // node Toggle[5]: x = 28, y = 203, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_5"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "x-plane"
    // output[1]: visible = 1, type = 29, value = 1
    // page group: Cut Planes
    // toggle : 1
    //
main_Toggle_5_out_1[cache: 2] = 
    Toggle(
    main_Toggle_5_in_1,
    main_Toggle_5_in_2,
    main_Toggle_5_in_3,
    main_Toggle_5_in_4,
    main_Toggle_5_in_5,
    main_Toggle_5_in_6
    ) [instance: 5, cache: 1];
    // 
    // node Selector[3]: x = 94, y = 383, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_3"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "z component" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 4 
    // input[4]: defaulting = 0, visible = 0, type = 16777248, value = {"x component" "y component" "z component" "magnitude" }
    // input[5]: defaulting = 0, visible = 0, type = 16777245, value = {2  3  4  1  }
    // output[1]: visible = 1, type = 29, value = 4 
    // output[2]: visible = 0, type = 32, value = "z component" 
    // page group: Import
    //
main_Selector_3_out_1[cache: 2],
main_Selector_3_out_2[cache: 2] = 
    Selector(
    main_Selector_3_in_1,
    main_Selector_3_in_2,
    main_Selector_3_in_3,
    main_Selector_3_in_4,
    main_Selector_3_in_5,
    main_Selector_3_in_6,
    main_Selector_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Toggle[9]: x = 496, y = 167, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_9"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  0  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 0, visible = 1, type = 29, value =  1  
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  0  
    // output[1]: visible = 1, type = 29, value =  0  
    // page group: Import
    // toggle : 0
    //
main_Toggle_9_out_1[cache: 2] = 
    Toggle(
    main_Toggle_9_in_1,
    main_Toggle_9_in_2,
    main_Toggle_9_in_3,
    main_Toggle_9_in_4,
    main_Toggle_9_in_5,
    main_Toggle_9_in_6
    ) [instance: 9, cache: 1];
    // 
    // node Compute[27]: x = 452, y = 239, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "(strcmp($0,'E')==0)||$1?1:2"
    // page group: Import
    // expression: value = (strcmp(a,'E')==0)||b?1:2
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_27_out_1 = 
    Compute(
    main_Compute_27_in_1,
    main_Attribute_1_out_1,
    main_Toggle_9_out_1
    ) [instance: 27, cache: 1];
    // 
    // node Transmitter[52]: x = 460, y = 311, inputs = 1, label = domain
    // page group: Import
    //
domain = main_Compute_27_out_1;
    // 
    // node Receiver[72]: x = 64, y = 239, inputs = 1, label = domain
    // page group: Import
    //
main_Receiver_72_out_1[cache: 0] = domain;
    // 
    // node FileSelector[2]: x = 46, y = 23, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "./sample-EM-mesh-1.dx"
    // output[2]: visible = 0, type = 32, value = "sample-EM-mesh-1.dx"
    // page group: Import
    //
    // 
    // node Import[2]: x = 65, y = 95, inputs = 6, label = Import
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "sigma"
    // input[3]: visible = 0
    // page group: Import
    //
main_Import_2_out_1 = 
    Import(
    main_FileSelector_2_out_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Include[1]: x = 62, y = 167, inputs = 6, label = Include
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[4]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[6]: visible = 0
    // page group: Import
    //
main_Include_1_out_1 = 
    Include(
    main_Import_2_out_1,
    main_Include_1_in_2,
    main_Include_1_in_3,
    main_Include_1_in_4,
    main_Include_1_in_5,
    main_Include_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Select[14]: x = 210, y = 167, inputs = 3, label = Select
    // input[2]: visible = 0
    // page group: Import
    //
main_Select_14_out_1 = 
    Select(
    main_Import_1_out_1,
    main_Select_14_in_2,
    main_Select_14_in_3
    ) [instance: 14, cache: 1];
    // 
    // node Replace[1]: x = 131, y = 239, inputs = 4, label = Replace
    // input[3]: defaulting = 0, visible = 0, type = 32, value = "invalid connections"
    // input[4]: defaulting = 0, visible = 0, type = 32, value = "invalid connections"
    // page group: Import
    //
main_Replace_1_out_1 = 
    Replace(
    main_Include_1_out_1,
    main_Select_14_out_1,
    main_Replace_1_in_3,
    main_Replace_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Switch[15]: x = 126, y = 311, inputs = 3, label = Switch
    // page group: Import
    //
main_Switch_15_out_1 = 
    Switch(
    main_Receiver_72_out_1,
    main_Replace_1_out_1,
    main_Select_14_out_1
    ) [instance: 15, cache: 1];
    // 
    // node Compute[21]: x = 200, y = 383, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // page group: Import
    // expression: value = a.x
    // name[2]: value = a
    //
main_Compute_21_out_1 = 
    Compute(
    main_Compute_21_in_1,
    main_Switch_15_out_1
    ) [instance: 21, cache: 1];
    // 
    // node Compute[22]: x = 272, y = 383, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // page group: Import
    // expression: value = a.y
    // name[2]: value = a
    //
main_Compute_22_out_1 = 
    Compute(
    main_Compute_22_in_1,
    main_Switch_15_out_1
    ) [instance: 22, cache: 1];
    // 
    // node Compute[23]: x = 344, y = 383, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.z"
    // page group: Import
    // expression: value = a.z
    // name[2]: value = a
    //
main_Compute_23_out_1 = 
    Compute(
    main_Compute_23_in_1,
    main_Switch_15_out_1
    ) [instance: 23, cache: 1];
    // 
    // node Switch[5]: x = 138, y = 455, inputs = 5, label = Switch
    // page group: Import
    //
main_Switch_5_out_1 = 
    Switch(
    main_Selector_3_out_1,
    main_Switch_15_out_1,
    main_Compute_21_out_1,
    main_Compute_22_out_1,
    main_Compute_23_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[33]: x = 181, y = 527, inputs = 1, label = field
    // page group: Import
    //
field = main_Switch_5_out_1;
    // 
    // node Receiver[17]: x = 109, y = 203, inputs = 1, label = field
    // page group: Cut Planes
    //
main_Receiver_17_out_1[cache: 0] = field;
    // 
    // node Route[5]: x = 66, y = 275, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: Cut Planes
    //
main_Route_5_out_1,
main_Route_5_out_2 = 
    Route(
    main_Toggle_5_out_1,
    main_Receiver_17_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Receiver[5]: x = 361, y = 23, inputs = 1, label = field
    // page group: Cut Planes
    //
main_Receiver_5_out_1[cache: 0] = field;
    // 
    // node PositionMinMax[1]: x = 294, y = 95, inputs = 1, label = PositionMinMax
    // page group: Cut Planes
    //
main_PositionMinMax_1_out_1,
main_PositionMinMax_1_out_2,
main_PositionMinMax_1_out_3,
main_PositionMinMax_1_out_4,
main_PositionMinMax_1_out_5,
main_PositionMinMax_1_out_6,
main_PositionMinMax_1_out_7 = 
    PositionMinMax(
    main_Receiver_5_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[3]: x = 173, y = 203, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 1, type = 5, value = 0.15
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 3
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "position"
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: Cut Planes
    //
main_Scalar_3_out_1[cache: 2] = 
    Scalar(
    main_Scalar_3_in_1,
    main_Scalar_3_in_2,
    main_Scalar_3_in_3,
    main_Scalar_3_in_4,
    main_PositionMinMax_1_out_1,
    main_PositionMinMax_1_out_2,
    main_Scalar_3_in_7,
    main_Scalar_3_in_8,
    main_Scalar_3_in_9,
    main_Scalar_3_in_10,
    main_Scalar_3_in_11
    ) [instance: 3, cache: 1];
    // 
    // node Compute[13]: x = 200, y = 275, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0,$1.y,$1.z]"
    // page group: Cut Planes
    // expression: value = [a,b.y,b.z]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_13_out_1 = 
    Compute(
    main_Compute_13_in_1,
    main_Scalar_3_out_1,
    main_PositionMinMax_1_out_7
    ) [instance: 13, cache: 1];
    // 
    // node MapToPlane[2]: x = 116, y = 347, inputs = 3, label = MapToPlane
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [1 0 0]
    // page group: Cut Planes
    //
main_MapToPlane_2_out_1 = 
    MapToPlane(
    main_Route_5_out_1,
    main_Compute_13_out_1,
    main_MapToPlane_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[6]: x = 280, y = 203, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_6"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "x-plane"
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Cut Planes
    // toggle : 0
    //
main_Toggle_6_out_1[cache: 2] = 
    Toggle(
    main_Toggle_6_in_1,
    main_Toggle_6_in_2,
    main_Toggle_6_in_3,
    main_Toggle_6_in_4,
    main_Toggle_6_in_5,
    main_Toggle_6_in_6
    ) [instance: 6, cache: 1];
    // 
    // node Receiver[18]: x = 361, y = 203, inputs = 1, label = field
    // page group: Cut Planes
    //
main_Receiver_18_out_1[cache: 0] = field;
    // 
    // node Route[6]: x = 318, y = 275, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: Cut Planes
    //
main_Route_6_out_1,
main_Route_6_out_2 = 
    Route(
    main_Toggle_6_out_1,
    main_Receiver_18_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Scalar[4]: x = 425, y = 203, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_4"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 1, type = 5, value = 0.15
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 3
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "position"
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: Cut Planes
    //
main_Scalar_4_out_1[cache: 2] = 
    Scalar(
    main_Scalar_4_in_1,
    main_Scalar_4_in_2,
    main_Scalar_4_in_3,
    main_Scalar_4_in_4,
    main_PositionMinMax_1_out_3,
    main_PositionMinMax_1_out_4,
    main_Scalar_4_in_7,
    main_Scalar_4_in_8,
    main_Scalar_4_in_9,
    main_Scalar_4_in_10,
    main_Scalar_4_in_11
    ) [instance: 4, cache: 1];
    // 
    // node Compute[14]: x = 452, y = 275, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$1.x,$0,$1.z]"
    // page group: Cut Planes
    // expression: value = [b.x,a,b.z]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_14_out_1 = 
    Compute(
    main_Compute_14_in_1,
    main_Scalar_4_out_1,
    main_PositionMinMax_1_out_7
    ) [instance: 14, cache: 1];
    // 
    // node MapToPlane[3]: x = 368, y = 347, inputs = 3, label = MapToPlane
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // page group: Cut Planes
    //
main_MapToPlane_3_out_1 = 
    MapToPlane(
    main_Route_6_out_1,
    main_Compute_14_out_1,
    main_MapToPlane_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Toggle[7]: x = 532, y = 203, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_7"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "x-plane"
    // output[1]: visible = 1, type = 29, value = 1
    // page group: Cut Planes
    // toggle : 1
    //
main_Toggle_7_out_1[cache: 2] = 
    Toggle(
    main_Toggle_7_in_1,
    main_Toggle_7_in_2,
    main_Toggle_7_in_3,
    main_Toggle_7_in_4,
    main_Toggle_7_in_5,
    main_Toggle_7_in_6
    ) [instance: 7, cache: 1];
    // 
    // node Receiver[19]: x = 613, y = 203, inputs = 1, label = field
    // page group: Cut Planes
    //
main_Receiver_19_out_1[cache: 0] = field;
    // 
    // node Route[7]: x = 570, y = 275, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: Cut Planes
    //
main_Route_7_out_1,
main_Route_7_out_2 = 
    Route(
    main_Toggle_7_out_1,
    main_Receiver_19_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Scalar[5]: x = 677, y = 203, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_5"
    // input[2]: visible = 0
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0 
    // input[5]: defaulting = 1, visible = 1, type = 5, value = -0.01
    // input[6]: defaulting = 1, visible = 1, type = 5, value = 0.01
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 4
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "position"
    // output[1]: visible = 1, type = 5, value = 0.0 
    // page group: Cut Planes
    //
main_Scalar_5_out_1[cache: 2] = 
    Scalar(
    main_Scalar_5_in_1,
    main_Scalar_5_in_2,
    main_Scalar_5_in_3,
    main_Scalar_5_in_4,
    main_PositionMinMax_1_out_5,
    main_PositionMinMax_1_out_6,
    main_Scalar_5_in_7,
    main_Scalar_5_in_8,
    main_Scalar_5_in_9,
    main_Scalar_5_in_10,
    main_Scalar_5_in_11
    ) [instance: 5, cache: 1];
    // 
    // node Compute[15]: x = 704, y = 275, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$1.x,$1.y,$0]"
    // page group: Cut Planes
    // expression: value = [b.x,b.y,a]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_15_out_1 = 
    Compute(
    main_Compute_15_in_1,
    main_Scalar_5_out_1,
    main_PositionMinMax_1_out_7
    ) [instance: 15, cache: 1];
    // 
    // node MapToPlane[4]: x = 584, y = 347, inputs = 3, label = MapToPlane
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [0 0 1]
    // page group: Cut Planes
    //
main_MapToPlane_4_out_1 = 
    MapToPlane(
    main_Route_7_out_1,
    main_Compute_15_out_1,
    main_MapToPlane_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Collect[5]: x = 378, y = 419, inputs = 3, label = Collect
    // page group: Cut Planes
    //
main_Collect_5_out_1 = 
    Collect(
    main_MapToPlane_2_out_1,
    main_MapToPlane_3_out_1,
    main_MapToPlane_4_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[49]: x = 377, y = 491, inputs = 1, label = cut_planes
    // page group: Cut Planes
    //
cut_planes = main_Collect_5_out_1;
    // 
    // node Receiver[22]: x = 17, y = 23, inputs = 1, label = cut_planes
    // page group: EM Field
    //
main_Receiver_22_out_1[cache: 0] = cut_planes;
    // 
    // node Shade[1]: x = 29, y = 95, inputs = 8, label = Shade
    // input[2]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 32, value = "faceted"
    // page group: EM Field
    //
main_Shade_1_out_1 = 
    Shade(
    main_Receiver_22_out_1,
    main_Shade_1_in_2,
    main_Shade_1_in_3,
    main_Shade_1_in_4,
    main_Shade_1_in_5,
    main_Shade_1_in_6,
    main_Shade_1_in_7,
    main_Shade_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[42]: x = 63, y = 455, inputs = 1, label = switch1
    // page group: Import
    //
switch1 = main_Selector_3_out_1;
    // 
    // node Receiver[63]: x = 243, y = 59, inputs = 1, label = switch1
    // page group: Colormaps
    //
main_Receiver_63_out_1[cache: 0] = switch1;
    // 
    // node Compute[26]: x = 236, y = 131, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "($0>1)?2:1"
    // input[3]: visible = 0
    // page group: Colormaps
    // expression: value = (a>1)?2:1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_26_out_1 = 
    Compute(
    main_Compute_26_in_1,
    main_Receiver_63_out_1,
    main_Compute_26_in_3
    ) [instance: 26, cache: 1];
    // 
    // node Receiver[50]: x = 171, y = 383, inputs = 1, label = switch1
    // page group: Data Limits
    //
main_Receiver_50_out_1[cache: 0] = switch1;
    // 
    // node Compute[25]: x = 164, y = 455, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "($0>1)?2:1"
    // input[3]: visible = 0
    // page group: Data Limits
    // expression: value = (a>1)?2:1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_25_out_1 = 
    Compute(
    main_Compute_25_in_1,
    main_Receiver_50_out_1,
    main_Compute_25_in_3
    ) [instance: 25, cache: 1];
    // 
    // node Toggle[10]: x = 28, y = 167, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_10"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 29, value =  2  
    // output[1]: visible = 1, type = 29, value = 1
    // page group: Data Limits
    // toggle : 1
    //
main_Toggle_10_out_1[cache: 2] = 
    Toggle(
    main_Toggle_10_in_1,
    main_Toggle_10_in_2,
    main_Toggle_10_in_3,
    main_Toggle_10_in_4,
    main_Toggle_10_in_5,
    main_Toggle_10_in_6
    ) [instance: 10, cache: 1];
    // 
    // node Value[1]: x = 104, y = 167, inputs = 0, label = Value
    // output[1]: visible = 1, type = 29, value = 0.0027
    // page group: Data Limits
    //
    // 
    // node Receiver[45]: x = 181, y = 23, inputs = 1, label = field
    // page group: Data Limits
    //
main_Receiver_45_out_1[cache: 0] = field;
    // 
    // node Statistics[4]: x = 163, y = 95, inputs = 1, label = Statistics
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: Data Limits
    //
main_Statistics_4_out_1,
main_Statistics_4_out_2,
main_Statistics_4_out_3,
main_Statistics_4_out_4,
main_Statistics_4_out_5 = 
    Statistics(
    main_Receiver_45_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Compute[19]: x = 164, y = 167, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max(abs($0),abs($1))"
    // page group: Data Limits
    // expression: value = max(abs(a),abs(b))
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_19_out_1 = 
    Compute(
    main_Compute_19_in_1,
    main_Statistics_4_out_4,
    main_Statistics_4_out_5
    ) [instance: 19, cache: 1];
    // 
    // node Switch[16]: x = 90, y = 311, inputs = 3, label = Switch
    // page group: Data Limits
    //
main_Switch_16_out_1 = 
    Switch(
    main_Toggle_10_out_1,
    main_Value_1_out_1,
    main_Compute_19_out_1
    ) [instance: 16, cache: 1];
    // 
    // node Compute[20]: x = 56, y = 419, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "-$0"
    // page group: Data Limits
    // expression: value = -a
    // name[2]: value = a
    //
main_Compute_20_out_1 = 
    Compute(
    main_Compute_20_in_1,
    main_Switch_16_out_1
    ) [instance: 20, cache: 1];
    // 
    // node Switch[9]: x = 90, y = 527, inputs = 3, label = Switch
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = 0
    // page group: Data Limits
    //
main_Switch_9_out_1 = 
    Switch(
    main_Compute_25_out_1,
    main_Switch_9_in_2,
    main_Compute_20_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Transmitter[48]: x = 94, y = 599, inputs = 1, label = data_min
    // page group: Data Limits
    //
data_min = main_Switch_9_out_1;
    // 
    // node Receiver[64]: x = 346, y = 59, inputs = 1, label = data_min
    // page group: Colormaps
    //
main_Receiver_64_out_1[cache: 0] = data_min;
    // 
    // node Switch[17]: x = 234, y = 311, inputs = 3, label = Switch
    // page group: Data Limits
    //
main_Switch_17_out_1 = 
    Switch(
    main_Toggle_10_out_1,
    main_Value_1_out_1,
    main_Statistics_4_out_5
    ) [instance: 17, cache: 1];
    // 
    // node Switch[7]: x = 234, y = 527, inputs = 3, label = Switch
    // input[2]: defaulting = 1, visible = 1, type = 67108863, value = 0
    // page group: Data Limits
    //
main_Switch_7_out_1 = 
    Switch(
    main_Compute_25_out_1,
    main_Switch_17_out_1,
    main_Switch_16_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[41]: x = 236, y = 599, inputs = 1, label = data_max
    // page group: Data Limits
    //
data_max = main_Switch_7_out_1;
    // 
    // node Receiver[65]: x = 416, y = 59, inputs = 1, label = data_max
    // page group: Colormaps
    //
main_Receiver_65_out_1[cache: 0] = data_max;
    // 
    // node Colormap[4]: x = 377, y = 131, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.666667] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_4"
    // input[6]: visible = 0
    // input[7]: defaulting = 1, visible = 1, type = 5, value = 0.0
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 0.0015136997
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[10]: visible = 0
    // input[11]: visible = 0
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 0.0015136997 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 0.0015136997
    // output[2]: visible = 0
    // page group: Colormaps
    // window: position = (17.0661,27.3058), size = 17.0661x27.3058
    //
main_Colormap_4_out_1[cache: 2],
main_Colormap_4_out_2[cache: 2] = 
    Colormap(
    main_Colormap_4_in_1,
    main_Colormap_4_in_2,
    main_Colormap_4_in_3,
    main_Colormap_4_in_4,
    main_Colormap_4_in_5,
    main_Colormap_4_in_6,
    main_Receiver_64_out_1,
    main_Receiver_65_out_1,
    main_Colormap_4_in_9,
    main_Colormap_4_in_10,
    main_Colormap_4_in_11,
    main_Colormap_4_in_12,
    main_Colormap_4_in_13,
    main_Colormap_4_in_14,
    main_Colormap_4_in_15,
    main_Colormap_4_in_16,
    main_Colormap_4_in_17,
    main_Colormap_4_in_18,
    main_Colormap_4_in_19
    ) [instance: 4, cache: 1];
    // 
    // node Receiver[57]: x = 526, y = 59, inputs = 1, label = data_min
    // page group: Colormaps
    //
main_Receiver_57_out_1[cache: 0] = data_min;
    // 
    // node Receiver[58]: x = 596, y = 59, inputs = 1, label = data_max
    // page group: Colormaps
    //
main_Receiver_58_out_1[cache: 0] = data_max;
    // 
    // node Colormap[1]: x = 557, y = 131, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.4] [0.45 0.67] [0.5 0.67] [0.5 0.0] [0.55 0.0] [1.0 0.27] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.32631579] [0.15 1.0] [0.85 1.0] [1.0 0.29473684] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [0.4 1.0] [0.46 0.8] [0.495 0.0] [0.505 0.0] [0.54 0.8] [0.6 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_1"
    // input[6]: visible = 0
    // input[7]: defaulting = 1, visible = 1, type = 5, value = -0.0027000001
    // input[8]: defaulting = 1, visible = 1, type = 5, value = 0.0027000001
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[10]: visible = 0
    // input[11]: visible = 0
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -0.0027000001 0.0027000001 }
    // input[13]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[14]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[15]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[16]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[17]: defaulting = 0, visible = 0, type = 5, value = -0.0027000001
    // input[18]: defaulting = 0, visible = 0, type = 5, value = 0.0027000001
    // output[2]: visible = 0
    // page group: Colormaps
    // window: position = (0.5620,0.3617), size = 0.4062x0.4392
    //
main_Colormap_1_out_1[cache: 2],
main_Colormap_1_out_2[cache: 2] = 
    Colormap(
    main_Colormap_1_in_1,
    main_Colormap_1_in_2,
    main_Colormap_1_in_3,
    main_Colormap_1_in_4,
    main_Colormap_1_in_5,
    main_Colormap_1_in_6,
    main_Receiver_57_out_1,
    main_Receiver_58_out_1,
    main_Colormap_1_in_9,
    main_Colormap_1_in_10,
    main_Colormap_1_in_11,
    main_Colormap_1_in_12,
    main_Colormap_1_in_13,
    main_Colormap_1_in_14,
    main_Colormap_1_in_15,
    main_Colormap_1_in_16,
    main_Colormap_1_in_17,
    main_Colormap_1_in_18,
    main_Colormap_1_in_19
    ) [instance: 1, cache: 1];
    // 
    // node Switch[12]: x = 378, y = 203, inputs = 3, label = Switch
    // page group: Colormaps
    //
main_Switch_12_out_1 = 
    Switch(
    main_Compute_26_out_1,
    main_Colormap_4_out_1,
    main_Colormap_1_out_1
    ) [instance: 12, cache: 1];
    // 
    // node Transmitter[47]: x = 394, y = 275, inputs = 1, label = cmap
    // page group: Colormaps
    //
cmap = main_Switch_12_out_1;
    // 
    // node Receiver[59]: x = 106, y = 95, inputs = 1, label = cmap
    // page group: EM Field
    //
main_Receiver_59_out_1[cache: 0] = cmap;
    // 
    // node Color[2]: x = 66, y = 167, inputs = 5, label = Color
    // input[3]: defaulting = 0, visible = 0, type = 5, value = .5
    // input[4]: defaulting = 0, visible = 0, type = 32, value = "colors"
    // page group: EM Field
    //
main_Color_2_out_1 = 
    Color(
    main_Shade_1_out_1,
    main_Receiver_59_out_1,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[50]: x = 66, y = 239, inputs = 1, label = planes
    // page group: EM Field
    //
planes = main_Color_2_out_1;
    // 
    // node Receiver[70]: x = 318, y = 23, inputs = 1, label = planes
    // page group: Image
    //
main_Receiver_70_out_1[cache: 0] = planes;
    // 
    // node Receiver[67]: x = 73, y = 23, inputs = 1, label = field
    // page group: Boundary
    //
main_Receiver_67_out_1[cache: 0] = field;
    // 
    // node ShowBoundary[1]: x = 34, y = 95, inputs = 2, label = ShowBoundary
    // input[2]: defaulting = 0, visible = 0, type = 3, value = 1
    // page group: Boundary
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Receiver_67_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node FaceNormals[1]: x = 42, y = 167, inputs = 1, label = FaceNormals
    // page group: Boundary
    //
main_FaceNormals_1_out_1 = 
    FaceNormals(
    main_ShowBoundary_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[68]: x = 178, y = 167, inputs = 1, label = cmap
    // page group: Boundary
    //
main_Receiver_68_out_1[cache: 0] = cmap;
    // 
    // node Color[8]: x = 138, y = 239, inputs = 5, label = Color
    // input[3]: visible = 0
    // page group: Boundary
    //
main_Color_8_out_1 = 
    Color(
    main_FaceNormals_1_out_1,
    main_Receiver_68_out_1,
    main_Color_8_in_3,
    main_Color_8_in_4,
    main_Color_8_in_5
    ) [instance: 8, cache: 1];
    // 
    // node Shade[2]: x = 137, y = 311, inputs = 8, label = Shade
    // input[2]: visible = 0
    // input[3]: visible = 0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // page group: Boundary
    //
main_Shade_2_out_1 = 
    Shade(
    main_Color_8_out_1,
    main_Shade_2_in_2,
    main_Shade_2_in_3,
    main_Shade_2_in_4,
    main_Shade_2_in_5,
    main_Shade_2_in_6,
    main_Shade_2_in_7,
    main_Shade_2_in_8
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[51]: x = 129, y = 383, inputs = 1, label = boundary
    // page group: Boundary
    //
boundary = main_Shade_2_out_1;
    // 
    // node Receiver[69]: x = 381, y = 23, inputs = 1, label = boundary
    // page group: Image
    //
main_Receiver_69_out_1[cache: 0] = boundary;
    // 
    // node Switch[14]: x = 306, y = 95, inputs = 3, label = Switch
    // page group: Image
    //
main_Switch_14_out_1 = 
    Switch(
    main_Selector_4_out_1,
    main_Receiver_70_out_1,
    main_Receiver_69_out_1
    ) [instance: 14, cache: 1];
    // 
    // node Route[3]: x = 66, y = 167, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: Image
    //
main_Route_3_out_1,
main_Route_3_out_2 = 
    Route(
    main_Toggle_3_out_1,
    main_Switch_14_out_1
    ) [instance: 3, cache: 1];
    // 
    // node ShowConnections[2]: x = 24, y = 239, inputs = 1, label = ShowConnections
    // page group: Image
    //
main_ShowConnections_2_out_1 = 
    ShowConnections(
    main_Route_3_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Color[3]: x = 68, y = 311, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "black"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = .75
    // page group: Image
    //
main_Color_3_out_1 = 
    Color(
    main_ShowConnections_2_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[23]: x = 217, y = 203, inputs = 1, label = field
    // page group: Image
    //
main_Receiver_23_out_1[cache: 0] = field;
    // 
    // node ShowBox[2]: x = 199, y = 275, inputs = 1, label = ShowBox
    // output[2]: visible = 0
    // page group: Image
    //
main_ShowBox_2_out_1,
main_ShowBox_2_out_2 = 
    ShowBox(
    main_Receiver_23_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Toggle[8]: x = 424, y = 167, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_8"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: Image
    // toggle : 1
    //
    // 
    // node Receiver[71]: x = 502, y = 167, inputs = 1, label = cmap
    // page group: Image
    //
main_Receiver_71_out_1[cache: 0] = cmap;
    // 
    // node Route[11]: x = 462, y = 239, inputs = 2, outputs = 2, label = Route
    // output[2]: visible = 0
    // page group: Image
    //
main_Route_11_out_1,
main_Route_11_out_2 = 
    Route(
    main_Toggle_8_out_1,
    main_Receiver_71_out_1
    ) [instance: 11, cache: 1];
    // 
    // node ColorBar[1]: x = 452, y = 311, inputs = 16, label = ColorBar
    // input[2]: defaulting = 0, visible = 0, type = 8, value = [0.98 0.5]
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [300 10]
    // input[4]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[8]: visible = 0
    // page group: Image
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_Route_11_out_1,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14,
    main_ColorBar_1_in_15,
    main_ColorBar_1_in_16
    ) [instance: 1, cache: 1];
    // 
    // node Color[9]: x = 608, y = 311, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "white"
    // input[3]: visible = 0
    // page group: Image
    //
main_Color_9_out_1 = 
    Color(
    main_Caption_1_out_1,
    main_Color_9_in_2,
    main_Color_9_in_3,
    main_Color_9_in_4,
    main_Color_9_in_5
    ) [instance: 9, cache: 1];
    // 
    // node Collect[2]: x = 282, y = 383, inputs = 5, label = Collect
    // page group: Image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Color_3_out_1,
    main_ShowBox_2_out_1,
    main_Switch_14_out_1,
    main_ColorBar_1_out_1,
    main_Color_9_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Image[4]: x = 319, y = 455, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_4"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.075 0.075 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.35702 -0.32783 0.229526]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.290816
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 771
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.736
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.220141 0.361998 0.905812]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 0, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 0, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[20]: defaulting = 1, visible = 0, type = 64, value = NULL
    // input[23]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[26]: defaulting = 0, visible = 0, type = 32, value = "miff"
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    // page group: Image
    // depth: value = 24
    // window: position = (0.0000,0.0333), size = 0.4089x0.5100
    // internal caching: 1
    //
main_Image_4_out_1,
main_Image_4_out_2,
main_Image_4_out_3 = 
    Image(
    main_Image_4_in_1,
    main_Collect_2_out_1,
    main_Image_4_in_3,
    main_Image_4_in_4,
    main_Image_4_in_5,
    main_Image_4_in_6,
    main_Image_4_in_7,
    main_Image_4_in_8,
    main_Image_4_in_9,
    main_Image_4_in_10,
    main_Image_4_in_11,
    main_Image_4_in_12,
    main_Image_4_in_13,
    main_Image_4_in_14,
    main_Image_4_in_15,
    main_Image_4_in_16,
    main_Image_4_in_17,
    main_Image_4_in_18,
    main_Image_4_in_19,
    main_Image_4_in_20,
    main_Image_4_in_21,
    main_Image_4_in_22,
    main_Image_4_in_23,
    main_Image_4_in_24,
    main_Image_4_in_25,
    main_Image_4_in_26,
    main_Image_4_in_27,
    main_Image_4_in_28,
    main_Image_4_in_29,
    main_Image_4_in_30,
    main_Image_4_in_31,
    main_Image_4_in_32,
    main_Image_4_in_33,
    main_Image_4_in_34,
    main_Image_4_in_35,
    main_Image_4_in_36,
    main_Image_4_in_37,
    main_Image_4_in_38,
    main_Image_4_in_39,
    main_Image_4_in_40,
    main_Image_4_in_41,
    main_Image_4_in_42,
    main_Image_4_in_43,
    main_Image_4_in_44,
    main_Image_4_in_45,
    main_Image_4_in_46,
    main_Image_4_in_47,
    main_Image_4_in_48,
    main_Image_4_in_49
    ) [instance: 4, cache: 1];
// network: end of macro body
CacheScene(main_Image_4_in_1, main_Image_4_out_1, main_Image_4_out_2);
}
main_FileSelector_1_out_1 = "./sample-EM-Bfield-1.4.dx";
main_Sequencer_2_in_1 = "Sequencer_2";
main_Sequencer_2_in_2 = NULL;
main_Sequencer_2_in_3 = NULL;
main_Sequencer_2_in_4 = NULL;
main_Sequencer_2_in_5 = NULL;
main_Sequencer_2_in_6 = NULL;
main_Sequencer_2_in_7 = { 0 19 1 0 19 1 };
main_Sequencer_2_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 19;
@deltaframe = 1;
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Attribute_1_in_2 = NULL;
main_Attribute_1_out_1 = NULL;
main_Inquire_5_in_2 = "series positions";
main_Inquire_5_in_3 = NULL;
main_Inquire_5_out_1 = NULL;
main_Select_15_in_2 = NULL;
main_Select_15_in_3 = NULL;
main_Select_15_out_1 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_73_out_1 = NULL;
main_Compute_28_in_1 = "mod($0,1)";
main_Compute_28_in_3 = NULL;
main_Compute_28_out_1 = NULL;
main_Format_1_in_1 = "t = %.2f";
main_Format_1_in_3 = NULL;
main_Format_1_out_1 = NULL;
main_Caption_1_in_2 = NULL;
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = NULL;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 1;
main_Toggle_3_in_3 = 1;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = NULL;
main_Toggle_3_out_1 = 1;
main_Selector_4_in_1 = "Selector_4";
main_Selector_4_in_2 = "Boundary" ;
main_Selector_4_in_3 = 2 ;
main_Selector_4_in_4 = {"Cut Planes" "Boundary" };
main_Selector_4_in_5 = {1  2  };
main_Selector_4_in_6 = NULL;
main_Selector_4_in_7 = NULL;
main_Selector_4_out_1 = 2 ;
main_Toggle_5_in_1 = "Toggle_5";
main_Toggle_5_in_2 = 1;
main_Toggle_5_in_3 = 1;
main_Toggle_5_in_4 = NULL;
main_Toggle_5_in_5 = NULL;
main_Toggle_5_in_6 = "x-plane";
main_Toggle_5_out_1 = 1;
main_Selector_3_in_1 = "Selector_3";
main_Selector_3_in_2 = "z component" ;
main_Selector_3_in_3 = 4 ;
main_Selector_3_in_4 = {"x component" "y component" "z component" "magnitude" };
main_Selector_3_in_5 = {2  3  4  1  };
main_Selector_3_in_6 = NULL;
main_Selector_3_in_7 = NULL;
main_Selector_3_out_1 = 4 ;
main_Toggle_9_in_1 = "Toggle_9";
main_Toggle_9_in_2 =  0  ;
main_Toggle_9_in_3 = 0;
main_Toggle_9_in_4 =  1  ;
main_Toggle_9_in_5 =  0  ;
main_Toggle_9_in_6 = NULL;
main_Toggle_9_out_1 =  0  ;
main_Compute_27_in_1 = "(strcmp($0,'E')==0)||$1?1:2";
main_Compute_27_out_1 = NULL;
main_Transmitter_52_out_1 = NULL;
main_Receiver_72_out_1 = NULL;
main_FileSelector_2_out_1 = "./sample-EM-mesh-1.dx";
main_Import_2_in_2 = "sigma";
main_Import_2_in_3 = NULL;
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_Include_1_in_2 = NULL;
main_Include_1_in_3 = 0.0;
main_Include_1_in_4 = 1;
main_Include_1_in_5 = 0;
main_Include_1_in_6 = NULL;
main_Include_1_out_1 = NULL;
main_Select_14_in_2 = NULL;
main_Select_14_in_3 = NULL;
main_Select_14_out_1 = NULL;
main_Replace_1_in_3 = "invalid connections";
main_Replace_1_in_4 = "invalid connections";
main_Replace_1_out_1 = NULL;
main_Switch_15_out_1 = NULL;
main_Compute_21_in_1 = "$0.x";
main_Compute_21_out_1 = NULL;
main_Compute_22_in_1 = "$0.y";
main_Compute_22_out_1 = NULL;
main_Compute_23_in_1 = "$0.z";
main_Compute_23_out_1 = NULL;
main_Switch_5_out_1 = NULL;
main_Transmitter_33_out_1 = NULL;
main_Receiver_17_out_1 = NULL;
main_Route_5_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_PositionMinMax_1_out_1 = NULL;
main_PositionMinMax_1_out_2 = NULL;
main_PositionMinMax_1_out_3 = NULL;
main_PositionMinMax_1_out_4 = NULL;
main_PositionMinMax_1_out_5 = NULL;
main_PositionMinMax_1_out_6 = NULL;
main_PositionMinMax_1_out_7 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 0.0 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = "position";
main_Scalar_3_out_1 = 0.0 ;
main_Compute_13_in_1 = "[$0,$1.y,$1.z]";
main_Compute_13_out_1 = NULL;
main_MapToPlane_2_in_3 = [1 0 0];
main_MapToPlane_2_out_1 = NULL;
main_Toggle_6_in_1 = "Toggle_6";
main_Toggle_6_in_2 = 0;
main_Toggle_6_in_3 = 0;
main_Toggle_6_in_4 = NULL;
main_Toggle_6_in_5 = NULL;
main_Toggle_6_in_6 = "x-plane";
main_Toggle_6_out_1 = 0;
main_Receiver_18_out_1 = NULL;
main_Route_6_out_1 = NULL;
main_Scalar_4_in_1 = "Scalar_4";
main_Scalar_4_in_2 = NULL;
main_Scalar_4_in_3 = 0.0 ;
main_Scalar_4_in_4 = NULL;
main_Scalar_4_in_7 = NULL;
main_Scalar_4_in_8 = NULL;
main_Scalar_4_in_9 = NULL;
main_Scalar_4_in_10 = NULL;
main_Scalar_4_in_11 = "position";
main_Scalar_4_out_1 = 0.0 ;
main_Compute_14_in_1 = "[$1.x,$0,$1.z]";
main_Compute_14_out_1 = NULL;
main_MapToPlane_3_in_3 = [0 1 0];
main_MapToPlane_3_out_1 = NULL;
main_Toggle_7_in_1 = "Toggle_7";
main_Toggle_7_in_2 = 1;
main_Toggle_7_in_3 = 1;
main_Toggle_7_in_4 = NULL;
main_Toggle_7_in_5 = NULL;
main_Toggle_7_in_6 = "x-plane";
main_Toggle_7_out_1 = 1;
main_Receiver_19_out_1 = NULL;
main_Route_7_out_1 = NULL;
main_Scalar_5_in_1 = "Scalar_5";
main_Scalar_5_in_2 = NULL;
main_Scalar_5_in_3 = 0.0 ;
main_Scalar_5_in_4 = NULL;
main_Scalar_5_in_7 = NULL;
main_Scalar_5_in_8 = NULL;
main_Scalar_5_in_9 = NULL;
main_Scalar_5_in_10 = NULL;
main_Scalar_5_in_11 = "position";
main_Scalar_5_out_1 = 0.0 ;
main_Compute_15_in_1 = "[$1.x,$1.y,$0]";
main_Compute_15_out_1 = NULL;
main_MapToPlane_4_in_3 = [0 0 1];
main_MapToPlane_4_out_1 = NULL;
main_Collect_5_out_1 = NULL;
main_Transmitter_49_out_1 = NULL;
main_Receiver_22_out_1 = NULL;
main_Shade_1_in_2 = 0;
main_Shade_1_in_3 = "faceted";
main_Shade_1_in_4 = NULL;
main_Shade_1_in_5 = NULL;
main_Shade_1_in_6 = NULL;
main_Shade_1_in_7 = NULL;
main_Shade_1_in_8 = NULL;
main_Shade_1_out_1 = NULL;
main_Transmitter_42_out_1 = NULL;
main_Receiver_63_out_1 = NULL;
main_Compute_26_in_1 = "($0>1)?2:1";
main_Compute_26_in_3 = NULL;
main_Compute_26_out_1 = NULL;
main_Receiver_50_out_1 = NULL;
main_Compute_25_in_1 = "($0>1)?2:1";
main_Compute_25_in_3 = NULL;
main_Compute_25_out_1 = NULL;
main_Toggle_10_in_1 = "Toggle_10";
main_Toggle_10_in_2 = 1;
main_Toggle_10_in_3 = 1;
main_Toggle_10_in_4 = NULL;
main_Toggle_10_in_5 =  2  ;
main_Toggle_10_in_6 = NULL;
main_Toggle_10_out_1 = 1;
main_Value_1_out_1 = 0.0027;
main_Receiver_45_out_1 = NULL;
main_Statistics_4_out_4 = NULL;
main_Statistics_4_out_5 = NULL;
main_Compute_19_in_1 = "max(abs($0),abs($1))";
main_Compute_19_out_1 = NULL;
main_Switch_16_out_1 = NULL;
main_Compute_20_in_1 = "-$0";
main_Compute_20_out_1 = NULL;
main_Switch_9_in_2 = 0;
main_Switch_9_out_1 = NULL;
main_Transmitter_48_out_1 = NULL;
main_Receiver_64_out_1 = NULL;
main_Switch_17_out_1 = NULL;
main_Switch_7_out_1 = NULL;
main_Transmitter_41_out_1 = NULL;
main_Receiver_65_out_1 = NULL;
main_Colormap_4_in_1 = { [0.0 0.666667] [1.0 0.0] };
main_Colormap_4_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_4_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_4_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_4_in_5 = "Colormap_4";
main_Colormap_4_in_6 = NULL;
main_Colormap_4_in_9 = NULL;
main_Colormap_4_in_10 = NULL;
main_Colormap_4_in_11 = NULL;
main_Colormap_4_in_12 = { 0.0 0.0015136997 };
main_Colormap_4_in_13 = NULL;
main_Colormap_4_in_14 = NULL;
main_Colormap_4_in_15 = NULL;
main_Colormap_4_in_16 = NULL;
main_Colormap_4_in_17 = 0.0;
main_Colormap_4_in_18 = 0.0015136997;
main_Colormap_4_in_19 = NULL;
main_Colormap_4_out_1 = NULL;
main_Receiver_57_out_1 = NULL;
main_Receiver_58_out_1 = NULL;
main_Colormap_1_in_1 = { [0.0 0.4] [0.45 0.67] [0.5 0.67] [0.5 0.0] [0.55 0.0] [1.0 0.27] };
main_Colormap_1_in_2 = { [0.0 0.32631579] [0.15 1.0] [0.85 1.0] [1.0 0.29473684] };
main_Colormap_1_in_3 = { [0.0 1.0] [0.4 1.0] [0.46 0.8] [0.495 0.0] [0.505 0.0] [0.54 0.8] [0.6 1.0] [1.0 1.0] };
main_Colormap_1_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_1_in_5 = "Colormap_1";
main_Colormap_1_in_6 = NULL;
main_Colormap_1_in_9 = NULL;
main_Colormap_1_in_10 = NULL;
main_Colormap_1_in_11 = NULL;
main_Colormap_1_in_12 = { -0.0027000001 0.0027000001 };
main_Colormap_1_in_13 = NULL;
main_Colormap_1_in_14 = NULL;
main_Colormap_1_in_15 = NULL;
main_Colormap_1_in_16 = NULL;
main_Colormap_1_in_17 = -0.0027000001;
main_Colormap_1_in_18 = 0.0027000001;
main_Colormap_1_in_19 = NULL;
main_Colormap_1_out_1 = NULL;
main_Switch_12_out_1 = NULL;
main_Transmitter_47_out_1 = NULL;
main_Receiver_59_out_1 = NULL;
main_Color_2_in_3 = .5;
main_Color_2_in_4 = "colors";
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Transmitter_50_out_1 = NULL;
main_Receiver_70_out_1 = NULL;
main_Receiver_67_out_1 = NULL;
main_ShowBoundary_1_in_2 = 1;
main_ShowBoundary_1_out_1 = NULL;
main_FaceNormals_1_out_1 = NULL;
main_Receiver_68_out_1 = NULL;
main_Color_8_in_3 = NULL;
main_Color_8_in_4 = NULL;
main_Color_8_in_5 = NULL;
main_Color_8_out_1 = NULL;
main_Shade_2_in_2 = NULL;
main_Shade_2_in_3 = NULL;
main_Shade_2_in_4 = NULL;
main_Shade_2_in_5 = NULL;
main_Shade_2_in_6 = 1.0;
main_Shade_2_in_7 = NULL;
main_Shade_2_in_8 = NULL;
main_Shade_2_out_1 = NULL;
main_Transmitter_51_out_1 = NULL;
main_Receiver_69_out_1 = NULL;
main_Switch_14_out_1 = NULL;
main_Route_3_out_1 = NULL;
main_ShowConnections_2_out_1 = NULL;
main_Color_3_in_2 = "black";
main_Color_3_in_3 = .75;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Receiver_23_out_1 = NULL;
main_ShowBox_2_out_1 = NULL;
main_Toggle_8_in_1 = "Toggle_8";
main_Toggle_8_in_2 = 1;
main_Toggle_8_in_3 = 1;
main_Toggle_8_in_4 = NULL;
main_Toggle_8_in_5 = NULL;
main_Toggle_8_in_6 = NULL;
main_Toggle_8_out_1 = 1;
main_Receiver_71_out_1 = NULL;
main_Route_11_out_1 = NULL;
main_ColorBar_1_in_2 = [0.98 0.5];
main_ColorBar_1_in_3 = [300 10];
main_ColorBar_1_in_4 = 0;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_in_15 = NULL;
main_ColorBar_1_in_16 = NULL;
main_ColorBar_1_out_1 = NULL;
main_Color_9_in_2 = "white";
main_Color_9_in_3 = NULL;
main_Color_9_in_4 = NULL;
main_Color_9_in_5 = NULL;
main_Color_9_out_1 = NULL;
main_Collect_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_4_in_1 = "Image_4";
main_Image_4_in_3 = "X24,,";
main_Image_4_in_4 = 1;
main_Image_4_in_5 = [0.075 0.075 0];
main_Image_4_in_6 = [0.35702 -0.32783 0.229526];
main_Image_4_in_7 = 0.290816;
main_Image_4_in_8 = 771;
main_Image_4_in_9 = 0.736;
main_Image_4_in_10 = [-0.220141 0.361998 0.905812];
main_Image_4_in_11 = NULL;
main_Image_4_in_12 = 0;
main_Image_4_in_13 = NULL;
main_Image_4_in_14 = 1;
main_Image_4_in_15 = "none";
main_Image_4_in_16 = "none";
main_Image_4_in_17 = NULL;
main_Image_4_in_18 = NULL;
main_Image_4_in_19 = 0;
main_Image_4_in_20 = NULL;
main_Image_4_in_21 = NULL;
main_Image_4_in_22 = NULL;
main_Image_4_in_23 = 1.0;
main_Image_4_in_25 = NULL;
main_Image_4_in_26 = "miff";
main_Image_4_in_27 = NULL;
main_Image_4_in_28 = NULL;
main_Image_4_in_29 = 0;
main_Image_4_in_30 = NULL;
main_Image_4_in_31 = NULL;
main_Image_4_in_32 = NULL;
main_Image_4_in_33 = NULL;
main_Image_4_in_34 = NULL;
main_Image_4_in_35 = NULL;
main_Image_4_in_36 = NULL;
main_Image_4_in_37 = NULL;
main_Image_4_in_38 = NULL;
main_Image_4_in_39 = NULL;
main_Image_4_in_40 = NULL;
main_Image_4_in_41 = "none";
main_Image_4_in_42 = NULL;
main_Image_4_in_43 = NULL;
main_Image_4_in_44 = NULL;
main_Image_4_in_45 = NULL;
main_Image_4_in_46 = NULL;
main_Image_4_in_47 = NULL;
main_Image_4_in_48 = NULL;
main_Image_4_in_49 = NULL;
Executive("product version 4 3 2");
$sync

sequence main();
play;
