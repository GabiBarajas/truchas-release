//
// time: Wed Jun  7 16:29:56 2000
//
// version: 3.1.2 (format), 4.1.0 (DX)
//
//
// Begin MDF
// MODULE PositionMinMax
// CATEGORY Macros
// INPUT input; field; (none);  Computes the min/max of each component of the positions
// OUTPUT xmin; scalar;  
// OUTPUT xmax; scalar;  
// OUTPUT ymin; scalar;  
// OUTPUT ymax; scalar;  
// OUTPUT zmin; scalar;  
// OUTPUT zmax; scalar;  
// OUTPUT center; vector;  
// End MDF
// workspace: width = 578, height = 651
// layout: snap = 1, width = 20, height = 40, align = CC
//
macro PositionMinMax(
 input
) -> (
 xmin
,xmax
,ymin
,ymax
,zmin
,zmax
,center
) {
    // 
    // node Input[1]: x = 309, y = 29, inputs = 0, label = Input
    // parameter: position = 1, name = 'input', value = '(none)', descriptive = 1, description = ' Computes the min/max of each component of the positions', required = 1, visible = 1
    //
PositionMinMax_Input_1_out_1 = input;
    // 
    // node Inquire[3]: x = 103, y = 109, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "is 1D positions"
    // input[3]: visible = 0
    //
PositionMinMax_Inquire_3_out_1 = 
    Inquire(
    PositionMinMax_Input_1_out_1,
    "is 1D positions",
    NULL
    ) [instance: 3, cache: 1];
    // 
    // node Inquire[1]: x = 163, y = 109, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "is 2D positions"
    // input[3]: visible = 0
    //
PositionMinMax_Inquire_1_out_1 = 
    Inquire(
    PositionMinMax_Input_1_out_1,
    "is 2D positions",
    NULL
    ) [instance: 1, cache: 1];
    // 
    // node Inquire[2]: x = 223, y = 109, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "is 3D positions"
    // input[3]: visible = 0
    //
PositionMinMax_Inquire_2_out_1 = 
    Inquire(
    PositionMinMax_Input_1_out_1,
    "is 3D positions",
    NULL
    ) [instance: 2, cache: 1];
    // 
    // node Compute[1]: x = 154, y = 189, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0 + 2*$1 + 3*$2"
    // expression: value = a + 2*b + 3*c
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
PositionMinMax_Compute_1_out_1 = 
    Compute(
    "$0 + 2*$1 + 3*$2",
    PositionMinMax_Inquire_3_out_1,
    PositionMinMax_Inquire_1_out_1,
    PositionMinMax_Inquire_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Switch[1]: x = 164, y = 269, inputs = 4, label = Switch
    // input[2]: defaulting = 0, visible = 0, type = 16777245, value = {1}
    // input[3]: defaulting = 0, visible = 0, type = 16777245, value = {1 2}
    // input[4]: defaulting = 0, visible = 0, type = 16777245, value = {1 2 3}
    //
PositionMinMax_Switch_1_out_1 = 
    Switch(
    PositionMinMax_Compute_1_out_1,
    {1},
    {1 2},
    {1 2 3}
    ) [instance: 1, cache: 1];
    // 
    // node ShowBox[1]: x = 435, y = 189, inputs = 1, label = ShowBox
    //
PositionMinMax_ShowBox_1_out_1,
PositionMinMax_ShowBox_1_out_2 = 
    ShowBox(
    PositionMinMax_Input_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Mark[1]: x = 350, y = 269, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "positions"
    //
PositionMinMax_Mark_1_out_1 = 
    Mark(
    PositionMinMax_ShowBox_1_out_1,
    "positions"
    ) [instance: 1, cache: 1];
    // 
    // node Route[1]: x = 234, y = 349, inputs = 2, outputs = 3, label = Route
    //
PositionMinMax_Route_1_out_1,
PositionMinMax_Route_1_out_2,
PositionMinMax_Route_1_out_3 = 
    Route(
    PositionMinMax_Switch_1_out_1,
    PositionMinMax_Mark_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Compute[2]: x = 76, y = 429, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.x"
    // expression: value = a.x
    // name[2]: value = a
    //
PositionMinMax_Compute_2_out_1 = 
    Compute(
    "$0.x",
    PositionMinMax_Route_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Compute[3]: x = 236, y = 429, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.y"
    // expression: value = a.y
    // name[2]: value = a
    //
PositionMinMax_Compute_3_out_1 = 
    Compute(
    "$0.y",
    PositionMinMax_Route_1_out_2
    ) [instance: 3, cache: 1];
    // 
    // node Compute[4]: x = 396, y = 429, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.z"
    // expression: value = a.z
    // name[2]: value = a
    //
PositionMinMax_Compute_4_out_1 = 
    Compute(
    "$0.z",
    PositionMinMax_Route_1_out_3
    ) [instance: 4, cache: 1];
    // 
    // node Statistics[1]: x = 75, y = 509, inputs = 1, label = Statistics
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    //
PositionMinMax_Statistics_1_out_1,
PositionMinMax_Statistics_1_out_2,
PositionMinMax_Statistics_1_out_3,
PositionMinMax_Statistics_1_out_4,
PositionMinMax_Statistics_1_out_5 = 
    Statistics(
    PositionMinMax_Compute_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Output[1]: x = 43, y = 589, inputs = 1, label = Output
    // parameter: position = 1, name = 'xmin', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
xmin = PositionMinMax_Statistics_1_out_4;
    // 
    // node Output[2]: x = 123, y = 589, inputs = 1, label = Output
    // parameter: position = 2, name = 'xmax', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
xmax = PositionMinMax_Statistics_1_out_5;
    // 
    // node Statistics[2]: x = 235, y = 509, inputs = 1, label = Statistics
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    //
PositionMinMax_Statistics_2_out_1,
PositionMinMax_Statistics_2_out_2,
PositionMinMax_Statistics_2_out_3,
PositionMinMax_Statistics_2_out_4,
PositionMinMax_Statistics_2_out_5 = 
    Statistics(
    PositionMinMax_Compute_3_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Output[3]: x = 203, y = 589, inputs = 1, label = Output
    // parameter: position = 3, name = 'ymin', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
ymin = PositionMinMax_Statistics_2_out_4;
    // 
    // node Output[4]: x = 283, y = 589, inputs = 1, label = Output
    // parameter: position = 4, name = 'ymax', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
ymax = PositionMinMax_Statistics_2_out_5;
    // 
    // node Statistics[3]: x = 395, y = 509, inputs = 1, label = Statistics
    // output[1]: visible = 0
    // output[2]: visible = 0
    // output[3]: visible = 0
    //
PositionMinMax_Statistics_3_out_1,
PositionMinMax_Statistics_3_out_2,
PositionMinMax_Statistics_3_out_3,
PositionMinMax_Statistics_3_out_4,
PositionMinMax_Statistics_3_out_5 = 
    Statistics(
    PositionMinMax_Compute_4_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Output[5]: x = 363, y = 589, inputs = 1, label = Output
    // parameter: position = 5, name = 'zmin', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
zmin = PositionMinMax_Statistics_3_out_4;
    // 
    // node Output[6]: x = 443, y = 589, inputs = 1, label = Output
    // parameter: position = 6, name = 'zmax', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
zmax = PositionMinMax_Statistics_3_out_5;
    // 
    // node Output[7]: x = 523, y = 589, inputs = 1, label = Output
    // parameter: position = 7, name = 'center', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
center = PositionMinMax_ShowBox_1_out_2;
// network: end of macro body
}
PositionMinMax_Input_1_out_1 = NULL;
PositionMinMax_Inquire_3_out_1 = NULL;
PositionMinMax_Inquire_1_out_1 = NULL;
PositionMinMax_Inquire_2_out_1 = NULL;
PositionMinMax_Compute_1_out_1 = NULL;
PositionMinMax_Switch_1_out_1 = NULL;
PositionMinMax_ShowBox_1_out_1 = NULL;
PositionMinMax_ShowBox_1_out_2 = NULL;
PositionMinMax_Mark_1_out_1 = NULL;
PositionMinMax_Route_1_out_1 = NULL;
PositionMinMax_Route_1_out_2 = NULL;
PositionMinMax_Route_1_out_3 = NULL;
PositionMinMax_Compute_2_out_1 = NULL;
PositionMinMax_Compute_3_out_1 = NULL;
PositionMinMax_Compute_4_out_1 = NULL;
PositionMinMax_Statistics_1_out_4 = NULL;
PositionMinMax_Statistics_1_out_5 = NULL;
PositionMinMax_Statistics_2_out_4 = NULL;
PositionMinMax_Statistics_2_out_5 = NULL;
PositionMinMax_Statistics_3_out_4 = NULL;
PositionMinMax_Statistics_3_out_5 = NULL;
