PROG = UbikTest

# Directories.

dot := $(shell pwd)
top = ../../..

include $(top)/config.mak
makeutilsdir := $(dot)/../../../$(makeutilsdir)
outputdir = out
bindir = .

MAKE := $(MAKE) --no-print-directory -f ../GNUmakefile.sub

outfile = $(PROG).out
errfile = $(PROG).err
datafile = $(PROG).dat
plotfile = $(PROG).gpl
datafile_mat = $(PROG)_mat.dat
plotfile_mat = $(PROG)_mat.gpl
outfiles = $(outfile) $(errfile) perf.data  \
           $(plotfile) $(datafile) $(PROG).gpl_driver  \
           $(plotfile_mat) $(datafile_mat) $(PROG)_mat.gpl_driver fort.*

trash = *~ .*~ core $(outfiles)

# info about environment

include $(makeutilsdir)/env.mak

check:
	@$(ECHO)
	@$(ECHO) ">>>>>>> in" $(dot) "<<<<<<<<"
	@$(ECHO)
	@$(ECHO) "path to Makeutils: " $(makeutilsdir)

runone:
	@$(RM) $(RMFLAGS) $(outfiles)
        ifeq ($(method),LU)
	  -$(bindir)/$(PROG)  \
            problem=$(problem)  \
            method=$(method)  \
            scale=$(scale)  \
            2>&1 > $(outputdir)/$(method)-$(scale)_$(problem)
	  @$(MAKE) basename=$(method)-$(scale)_$(problem) savefiles
        else
          ifeq ($(method),SOR)
	    -$(bindir)/$(PROG)  \
              problem=$(problem)  \
              asymm=$(asymm)  \
              method=$(method)  \
              relax=$(relax)  \
              scale=$(scale)  \
              2>&1 > $(outputdir)/$(method)-$(relax)-$(scale)_$(problem)
	    @$(MAKE) basename=$(method)-$(relax)-$(scale)_$(problem) savefiles
          else
            ifeq ($(pre),none)
	      -$(bindir)/$(PROG)  \
                problem=$(problem)  \
                asymm=$(asymm)  \
                method=$(method)  \
                scale=$(scale)  \
                2>&1 > $(outputdir)/$(method)-$(pre)-$(scale)_$(problem)
	      @$(MAKE) basename=$(method)-$(pre)-$(scale)_$(problem) savefiles
            else
	      -$(bindir)/$(PROG)  \
                problem=$(problem)  \
                asymm=$(asymm)  \
                method=$(method)  \
                pre=$(pre)  \
                relax=$(relax)  \
                scale=$(scale)  \
                2>&1 > $(outputdir)/$(method)-$(pre)-$(relax)-$(scale)_$(problem)
	      @$(MAKE) basename=$(method)-$(pre)-$(relax)-$(scale)_$(problem) savefiles
            endif
          endif
        endif
	@$(RM) $(RMFLAGS) $(outfiles)
	@$(ECHO)

savefiles:
	@if [ -f $(errfile) ];  \
        then  \
          $(CAT) $(errfile) >> $(outputdir)/$(basename);  \
        fi
	@if [ -f $(outfile) ];  \
        then  \
          $(CAT) $(outfile) >> $(outputdir)/$(basename);  \
        fi
	@if [ -f $(datafile) ];  \
        then  \
          $(MV) $(datafile) $(outputdir)/$(basename).dat;  \
        fi
	@if [ -f $(plotfile) ];  \
        then  \
          $(MV) $(plotfile) $(outputdir)/$(basename).gpl;  \
        fi
	@if [ -f $(datafile_mat) ];  \
        then  \
	  $(MV) $(datafile_mat) $(outputdir)/$(basename)_mat.dat;  \
        fi
	@if [ -f $(plotfile_mat) ];  \
        then  \
	  $(MV) $(plotfile_mat) $(outputdir)/$(basename)_mat.gpl;  \
        fi
	@if [ -f perf.data ];  \
        then  \
          $(MV) perf.data $(outputdir)/$(basename).perf;  \
        fi

ensure_outputdir:
        # Create the output directory if it doesn't exist.
	@$(ECHO)
	@if [ ! -d $(outputdir) ];  \
        then  \
         $(MKDIR) $(outputdir);  \
        fi

test: ensure_outputdir
	@$(MAKE) runsome_full
	@$(MAKE) runsome_ell
ifdef 77
	@$(MAKE) runsome_full_extra
	@$(MAKE) runsome_ell_extra
	@$(MAKE) runsome_coo
	@$(MAKE) runsome_rss
	@$(MAKE) runsome_css
endif
	@$(MAKE) summary

runsome_full: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, full storage"
	@$(ECHO)
	@$(MAKE) problem=1 asymm=0   scale=2 method=CG pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=0 method=SOR relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=BCGS pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGS pre=JAC relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGS pre=SSOR relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=BCGSTAB pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=TFQMR pre=none runone

runsome_ell: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, ELL storage"
	@$(ECHO)
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=0 method=SOR relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=BCGS pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGS pre=JAC relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGS pre=SSOR relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=BCGSTAB pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=TFQMR pre=none runone

runsome_full_extra: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, full storage (extra)"
	@$(ECHO)
	@$(MAKE) problem=1 asymm=0   scale=2 method=CG pre=IC relax=0.0 runone
	@$(MAKE) problem=1 asymm=0   scale=2 method=CG pre=IC relax=1.0 runone
	@$(MAKE) problem=1 asymm=0   scale=2 method=CG pre=IC relax=0.5 runone
	@$(MAKE) problem=1 asymm=0.2 scale=0 method=LU runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGS pre=ILU relax=0.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGS pre=ILU relax=1.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGS pre=ILU relax=0.5 runone

runsome_ell_extra: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, ELL storage (extra)"
	@$(ECHO)
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=IC relax=0.0 runone
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=IC relax=1.0 runone
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=IC relax=0.5 runone
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=ILU relax=0.0 runone
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=ILU relax=1.0 runone
	@$(MAKE) problem=2 asymm=0   scale=2 method=CG pre=ILU relax=0.5 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGS pre=ILU relax=0.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGS pre=ILU relax=1.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGS pre=ILU relax=0.5 runone

runsome_coo: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, COO storage"
	@$(ECHO)
	@$(MAKE) problem=3 asymm=0   scale=2 method=CG pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=0 method=SOR relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=BCGS pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=BCGS pre=JAC relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=BCGS pre=SSOR relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=TFQMR pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=BCGSTAB pre=none runone

runsome_rss: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, RSS storage"
	@$(ECHO)
	@$(MAKE) problem=4 asymm=0   scale=2 method=CG pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=0 method=SOR relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=BCGS pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=BCGS pre=JAC relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=BCGS pre=SSOR relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=TFQMR pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=BCGSTAB pre=none runone

runsome_css: ensure_outputdir
	@$(ECHO)
	@$(ECHO) "Saad Problem, CSS storage"
	@$(ECHO)
	@$(MAKE) problem=5 asymm=0   scale=2 method=CG pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=0 method=SOR relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=BCGS pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=BCGS pre=JAC relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=BCGS pre=SSOR relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=TFQMR pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=BCGSTAB pre=none runone
	@$(ECHO)

testall:
	@$(MAKE) runall_full
	@$(MAKE) runall_ell
ifdef 77
	@$(MAKE) runall_full_extra
	@$(MAKE) runall_ell_extra
	@$(MAKE) runall_coo
	@$(MAKE) runall_rss
	@$(MAKE) runall_css
endif
	@$(MAKE) summary

runall_full: runsome_full
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=LU runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=LU runone
	@$(MAKE) problem=1 asymm=0.2 scale=0 method=BCGS pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=0 method=BCGSTAB pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGSTAB pre=JAC relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGSTAB pre=SSOR relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGSTAB pre=ILU relax=0.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGSTAB pre=ILU relax=1.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=BCGSTAB pre=ILU relax=0.5 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=TFQMR pre=JAC relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=TFQMR pre=SSOR relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=TFQMR pre=ILU relax=0.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=TFQMR pre=ILU relax=1.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=TFQMR pre=ILU relax=0.5 runone
	@$(MAKE) problem=1 asymm=0.2 scale=0 method=GMRES pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=GMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=GMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=GMRES pre=ILU relax=0.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=GMRES pre=ILU relax=1.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=GMRES pre=ILU relax=0.5 runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=0 method=FGMRES pre=none runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=FGMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=FGMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=FGMRES pre=ILU relax=0.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=FGMRES pre=ILU relax=1.0 runone
	@$(MAKE) problem=1 asymm=0.2 scale=1 method=FGMRES pre=ILU relax=0.5 runone
	@$(MAKE) problem=1 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=1 asymm=0   scale=1 method=CG pre=JAC relax=1.2 runone
	@$(MAKE) problem=1 asymm=0   scale=1 method=CG pre=SSOR relax=1.2 runone

runall_ell: runsome_ell
	@$(MAKE) problem=2 asymm=0.2 scale=0 method=BCGS pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=0 method=BCGSTAB pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGSTAB pre=JAC relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGSTAB pre=SSOR relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGSTAB pre=ILU relax=0.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGSTAB pre=ILU relax=1.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=BCGSTAB pre=ILU relax=0.5 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=TFQMR pre=JAC relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=TFQMR pre=SSOR relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=TFQMR pre=ILU relax=0.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=TFQMR pre=ILU relax=1.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=TFQMR pre=ILU relax=0.5 runone
	@$(MAKE) problem=2 asymm=0.2 scale=0 method=GMRES pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=GMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=GMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=GMRES pre=ILU relax=0.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=GMRES pre=ILU relax=1.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=GMRES pre=ILU relax=0.5 runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=0 method=FGMRES pre=none runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=FGMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=FGMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=FGMRES pre=ILU relax=0.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=FGMRES pre=ILU relax=1.0 runone
	@$(MAKE) problem=2 asymm=0.2 scale=1 method=FGMRES pre=ILU relax=0.5 runone
	@$(MAKE) problem=2 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=2 asymm=0   scale=1 method=CG pre=JAC relax=1.2 runone
	@$(MAKE) problem=2 asymm=0   scale=1 method=CG pre=SSOR relax=1.2 runone

runall_coo: runsome_coo
	@$(MAKE) problem=3 asymm=0.2 scale=0 method=BCGS pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=0 method=BCGSTAB pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=BCGSTAB pre=JAC relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=BCGSTAB pre=SSOR relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=TFQMR pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=TFQMR pre=JAC relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=TFQMR pre=SSOR relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=0 method=GMRES pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=GMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=GMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=0 method=FGMRES pre=none runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=FGMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=1 method=FGMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=3 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=3 asymm=0   scale=1 method=CG pre=JAC relax=1.2 runone
	@$(MAKE) problem=3 asymm=0   scale=1 method=CG pre=SSOR relax=1.2 runone

runall_rss: runsome_rss
	@$(MAKE) problem=4 asymm=0.2 scale=0 method=BCGS pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=0 method=BCGSTAB pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=BCGSTAB pre=JAC relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=BCGSTAB pre=SSOR relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=TFQMR pre=JAC relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=TFQMR pre=SSOR relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=0 method=GMRES pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=GMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=GMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=0 method=FGMRES pre=none runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=FGMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=1 method=FGMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=4 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=4 asymm=0   scale=1 method=CG pre=JAC relax=1.2 runone
	@$(MAKE) problem=4 asymm=0   scale=1 method=CG pre=SSOR relax=1.2 runone

runall_css: runsome_css
	@$(MAKE) problem=5 asymm=0.2 scale=0 method=BCGS pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=0 method=BCGSTAB pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=BCGSTAB pre=JAC relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=BCGSTAB pre=SSOR relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=TFQMR pre=JAC relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=TFQMR pre=SSOR relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=0 method=GMRES pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=GMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=GMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=GMRES pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=0 method=FGMRES pre=none runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=FGMRES pre=JAC relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=1 method=FGMRES pre=SSOR relax=1.2 runone
	@$(MAKE) problem=5 asymm=0.2 scale=2 method=FGMRES pre=none runone
	@$(MAKE) problem=5 asymm=0   scale=1 method=CG pre=JAC relax=1.2 runone
	@$(MAKE) problem=5 asymm=0   scale=1 method=CG pre=SSOR relax=1.2 runone

storage_summary:
	@for file in $(outputdir)/*-*_$(problem);  \
        do  \
          $(AWK) -f ../summary.awk $(opts) $$file;  \
        done
	@$(ECHO)

solution_summary:
	@if [ "$(shell ls $(outputdir)/$(method)-* 2>/dev/null)" ];  \
        then  \
          for file in $(outputdir)/$(method)-*;  \
          do  \
            $(AWK) -f ../summary.awk $$file;  \
          done;  \
          $(ECHO);  \
        fi

solution_summary_krylov:
	@$(MAKE) solution_summary method=$(method)-none
	@$(MAKE) solution_summary method=$(method)-JAC
	@$(MAKE) solution_summary method=$(method)-SSOR
	@$(MAKE) solution_summary method=$(method)-IC
	@$(MAKE) solution_summary method=$(method)-MIC
	@$(MAKE) solution_summary method=$(method)-RIC
	@$(MAKE) solution_summary method=$(method)-ILU
	@$(MAKE) solution_summary method=$(method)-MILU
	@$(MAKE) solution_summary method=$(method)-RILU

summary:
	@$(ECHO)
	@$(ECHO) "Results grouped by storage format"
	@$(ECHO)
	@$(MAKE) storage_summary problem=1
	@$(MAKE) storage_summary problem=2
ifdef 77			     		               
	@$(MAKE) storage_summary problem=3
	@$(MAKE) storage_summary problem=4
	@$(MAKE) storage_summary problem=5
endif
	@$(ECHO)
	@$(ECHO) "Results grouped by solution method"
	@$(ECHO)
	@$(MAKE) solution_summary method=LU
	@$(MAKE) solution_summary method=SOR
	@$(MAKE) solution_summary_krylov method=CG
	@$(MAKE) solution_summary_krylov method=GMRES
	@$(MAKE) solution_summary_krylov method=FGMRES
	@$(MAKE) solution_summary_krylov method=BCGS
	@$(MAKE) solution_summary_krylov method=TFQMR
	@$(MAKE) solution_summary_krylov method=BCGSTAB

	@$(ECHO)
	@$(ECHO) "CPU times"
	@$(ECHO)
	@$(MAKE) storage_summary problem=1 opts="-v cpuout=yes"
	@$(MAKE) storage_summary problem=2 opts="-v cpuout=yes"
ifdef 77			     		               
	@$(MAKE) storage_summary problem=3 opts="-v cpuout=yes"
	@$(MAKE) storage_summary problem=4 opts="-v cpuout=yes"
	@$(MAKE) storage_summary problem=5 opts="-v cpuout=yes"
endif

cputest: ensure_outputdir
	@$(ECHO)
	@$(MAKE) unknowns=4000 blocksize=50 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=4000 blocksize=100 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=4000 blocksize=200 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=4000 blocksize=400 relax=1.6 steps=1 runcpu
	@$(MAKE) unknowns=4000 blocksize=800 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=4000 blocksize=1000 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=10000 blocksize=100 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=10000 blocksize=200 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=10000 blocksize=500 relax=1.6 steps=1 runcpu
	@$(MAKE) unknowns=10000 blocksize=1000 relax=1.6 steps=1 runcpu
	@$(MAKE) unknowns=10000 blocksize=2000 relax=1.6 steps=1 runcpu
	@$(MAKE) unknowns=50000 blocksize=100 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=50000 blocksize=200 relax=1.8 steps=1 runcpu
	@$(MAKE) unknowns=50000 blocksize=500 relax=1.8 steps=2 runcpu
	@$(MAKE) unknowns=50000 blocksize=2000 relax=1.8 steps=6 runcpu
	@$(MAKE) unknowns=50000 blocksize=5000 relax=1.6 steps=1 runcpu
	@$(ECHO)
	@$(MAKE) cpusummary

runcpu:
	@$(RM) $(RMFLAGS) $(outfiles)
	-$(bindir)/$(PROG)  \
                problem=2 asymm=0.2  \
                unknowns=$(unknowns) blocksize=$(blocksize)  \
                method=TFQMR  \
                pre=SSOR relax=$(relax) steps=$(steps)  \
                2>&1 > $(outputdir)/TFQMR_SSOR-perf-$(unknowns)-$(blocksize)_ELL
	@$(MAKE) basename=TFQMR_SSOR-cpu-$(unknowns)-$(blocksize)_ELL savefiles
#	@$(GREP) achieved $(outputdir)/TFQMR_SSOR-perf-$(unknowns)-$(blocksize)*
	-$(bindir)/$(PROG)  \
                problem=2 asymm=0.2  \
                unknowns=$(unknowns) blocksize=$(blocksize)  \
                method=GMRES  \
                pre=SSOR relax=$(relax) steps=$(steps)  \
                2>&1 > $(outputdir)/GMRES_SSOR-perf-$(unknowns)-$(blocksize)_ELL
	@$(MAKE) basename=GMRES_SSOR-cpu-$(unknowns)-$(blocksize)_ELL savefiles
#	@$(GREP) achieved $(outputdir)/GMRES_SSOR-perf-$(unknowns)-$(blocksize)*

cpusummary:
	@$(ECHO)
	@$(ECHO) "Performance (TFQMR / SSOR)"
	@$(ECHO) "=========================="
	@$(ECHO)
	@$(ECHO) "unknowns (blocksize)  iterations  CPU sec    error"
	@$(ECHO) "--------------------  ----------  -------    -----"
	@for file in $(outputdir)/*TFQMR_SSOR-perf-*;  \
        do  \
          $(AWK) -f ../summary.awk -v perfout=yes $$file;  \
        done | sort -n
	@$(ECHO)
	@$(ECHO) "Performance (GMRES / SSOR)"
	@$(ECHO) "=========================="
	@$(ECHO)
	@$(ECHO) "unknowns (blocksize)  iterations  CPU sec    error"
	@$(ECHO) "--------------------  ----------  -------    -----"
	@for file in $(outputdir)/*GMRES_SSOR-perf-*;  \
        do  \
          $(AWK) -f ../summary.awk -v perfout=yes $$file;  \
        done | sort -n

cleanup clean mostlyclean:
	$(RM) $(RMFLAGS) $(trash)

### Local Variables: ###
### tab-width: 8 ###
### End: ###
