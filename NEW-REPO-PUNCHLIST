Things in the new repo that need to be fixed
--------------------------------------------

Remove items as they are fixed.

* Had to remove the -C=all nagfor flag from the debug build as it
  triggers an internal compiler error on pgslib_init.  Old build had
  a separate set of compiler flags for pgslib and ubiksolve.  Need to
  address this issue somehow; we want to get back to using -C=all for
  the source in truchas. The flag is now removed from the pgslib
  and ubiksolve directories. Compile errors in truchas need to be addressed.
   
* Some NAG Fortran debug compiler flags are causing runtime cmake failures.
  I've had to drop "-u -g90" in order for cmake to properly generate a
  working build system.  We need to be able to use these flags for building
  the source, but there's no reason cmake scripts need to be using these to
  figure out its configuration. Here are the diagnostic messages I'm seeing:
  
  -- Check for working Fortran compiler: /opt/nag/nagfor-5.3.2/bin/nagfor
  -- Check for working Fortran compiler: /opt/nag/nagfor-5.3.2/bin/nagfor  -- works
  -- Detecting Fortran compiler ABI info
  -- Detecting Fortran compiler ABI info - done
  -- Checking whether /opt/nag/nagfor-5.3.2/bin/nagfor supports Fortran 90
  -- Checking whether /opt/nag/nagfor-5.3.2/bin/nagfor supports Fortran 90 -- no
  THIS FAILURE IS CAUSED BY "-u"                                             ^^^^
  
  -- Detecting Fortran/C Interface
  -- Detecting Fortran/C Interface - Failed to compile
  -- Verifying Fortran/C Compiler Compatibility
  CMake Warning (dev) at /opt/share/cmake-2.8/Modules/FortranCInterface.cmake:215 (message):
    No FortranCInterface mangling known for VerifyFortran
  Call Stack (most recent call first):
    CMakeLists.txt:24 (FortranCInterface_HEADER)
  This warning is for project developers.  Use -Wno-dev to suppress it.
  THIS FAILURE IS CAUSED BY "-g90"

* The 'make package' target should create tar files and a shell script that builds
  the code and creates a binary distribution. Not working at all.

* The prefices for each of the external packages should be changed to include
  the version number. Also ExternalProject_Add is generating a spruious src/
  but this is NOT the code source directory.

* Orignal test suite test is integrated into CTest, however due to the exit status of the 
  test harness all tests show PASS. Need to add a search capability to find the
  correct status. DO NOT RUN 'ctest -j n' or 'make -jn test'. Will kill the file
  system with stupid recursive copies.

* Need to move the -DPGSLIB, -DVERSION, etc. down to the drivers directory and 
  use configure_file to create the file instead of loading up the FPP flags.

* Need a C-coded executable return a build date string. C code to promote
  protability 'cuz 'date' is not supported on Windows.

* Add the python unittest harness.

* Need to configure Hypre with system LAPACK/BLAS or possibly MKL instead
  of building these with Hypre

* Change PGSLib Process* target to include PGSLib name.

* Need -DNDEBUG added to preprocessor defines for C code with "Release" build type.

* The TBrookParse post-processor extensions (shared libraries) link against the truchas
  library.  For this to work, the truchas code needed to be compiled with the "PIC"
  option.  I've added this (-fPIC for intel and -PIC for nag) to the CMAKE_Fortran_FLAGS
  variable in the cf.* files in the config directory.  I don't think this is the right
  way to do this.  Should we be building a shared truchas library instead?  (CMake
  then adds the necessary "PIC" options automatically.)

* The current CMake doesn't provide the correct "PIC" option for the NAG compiler (uses
  -fPIC instead of -PIC)  I've added a fix to the top-level CMakeLists.txt near the top.
  Is that the right place to put it?  (I think this bug is fixed in 2.8.11, but I don't
  want to require that version.)


