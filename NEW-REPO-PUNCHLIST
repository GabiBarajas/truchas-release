Things in the new repo that need to be fixed
--------------------------------------------

* Still have issues with .f90 not depending on .F90 file.  For example,
  I modified src/truchas/physics/enclosure/radiation/ER_solver.F90 but
  a new 'make' wouldn't generate a new .f90 file -- needed to manually
  remove the .f90 file.

* Had to remove the -C=all nagfor flag from the debug build as it
  triggers an internal compiler error on pgslib_init.  Old build had
  a separate set of compiler flags for pgslib and ubiksolve.  Need to
  address this issue somehow; we want to get back to using -C=all for
  the source in truchas.
   
* Some NAG Fortran debug compiler flags are causing runtime cmake failures.
  I've had to drop "-u -g90" in order for cmake to properly generate a
  working build system.  We need to be able to use these flags for building
  the source, but there's no reason cmake scripts need to be using these to
  figure out its configuration. Here are the diagnostic messages I'm seeing:
  
  -- Check for working Fortran compiler: /opt/nag/nagfor-5.3.2/bin/nagfor
  -- Check for working Fortran compiler: /opt/nag/nagfor-5.3.2/bin/nagfor  -- works
  -- Detecting Fortran compiler ABI info
  -- Detecting Fortran compiler ABI info - done
  -- Checking whether /opt/nag/nagfor-5.3.2/bin/nagfor supports Fortran 90
  -- Checking whether /opt/nag/nagfor-5.3.2/bin/nagfor supports Fortran 90 -- no
  THIS FAILURE IS CAUSED BY "-u"                                             ^^^^
  
  -- Detecting Fortran/C Interface
  -- Detecting Fortran/C Interface - Failed to compile
  -- Verifying Fortran/C Compiler Compatibility
  CMake Warning (dev) at /opt/share/cmake-2.8/Modules/FortranCInterface.cmake:215 (message):
    No FortranCInterface mangling known for VerifyFortran
  Call Stack (most recent call first):
    CMakeLists.txt:24 (FortranCInterface_HEADER)
  This warning is for project developers.  Use -Wno-dev to suppress it.
  THIS FAILURE IS CAUSED BY "-g90"

* The "sharen" target under parallel builds isn't running the executable
  under mpirun (with 4 processors), but just directly which is equivalent
  to a serial run.  This accounts for many of the tests failing, as the
  (serial) results are being compared against parallel golden results.

